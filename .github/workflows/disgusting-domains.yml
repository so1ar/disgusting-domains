name: Generate Disgusting Domains List

on:
  schedule:
    - cron: "0 0 * * 4"
  workflow_dispatch:

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main

      - name: Set variables
        run: |
          echo "RELEASE_NAME=$(date +%Y%m%d)" >> $GITHUB_ENV
        shell: bash

      - name: Clone Repo
        run: |
          git clone https://github.com/v2fly/domain-list-community.git --depth=1 domain

      - name: Copy Files
        run: |
          #cp $GITHUB_WORKSPACE/*.list .
          cp domain/data/facebook ./facebook.list
          cp domain/data/facebook-dev ./facebook-dev.list
          cp domain/data/iqiyi ./iqyi.list
          cp domain/data/douyu ./douyu.list
          cp domain/data/hm ./hm.list
          cp domain/data/huya ./huya.list
          cp domain/data/instagram ./instagram.list
          cp domain/data/jd ./jd.list
          cp domain/data/nike ./nike.list
          cp domain/data/sina ./sina.list
          cp domain/data/tiktok ./tiktok.list
          cp domain/data/twitter ./twitter.list
          cp domain/data/uc ./uc.list
          cp domain/data/umeng ./umeng.list
          cp domain/data/youku ./youku.list
          cp domain/data/xiaomi ./xiaomi.list
          cp domain/data/adidas ./adidas.list

      - name: generate list
        run: |
          ls -al > files
          cat *.list > output
          sed -i '/include:/d' output
          sed -i '/sinaimg/d' output
          sed -i '/#/d' output
          sed -i 's/full://g' output
          sed -i 's/@cn//g' output
          sed -i '/^\s*$/d' output
          awk '{print "||" $0}' output | awk '{print $0 "^"}' > rules
          mkdir publish
          mv output ./publish/domains
          mv rules ./publish
          mv files ./publish

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add geoip "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u geoip release
