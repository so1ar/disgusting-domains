name: Generate Disgusting Domains List

on:
  schedule:
    - cron: "0 0 * * 4"
  workflow_dispatch:

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main

      - name: Set variables
        run: |
          echo "RELEASE_NAME=$(date +%Y%m%d)" >> $GITHUB_ENV
        shell: bash

      - name: Clone Repo
        run: |
          git clone https://github.com/v2fly/domain-list-community.git --depth=1 domain

      - name: Generate List
        run: |
          for file in $(cat files)
          do
          cp domain/data/${file} ./${file}.tmp
          sed -i '/include:/d' ${file}.tmp
          sed -i '/sinaimg/d' ${file}.tmp
          sed -i '/#/d' ${file}.tmp
          sed -i 's/full://g' ${file}.tmp
          sed -i 's/@cn//g' ${file}.tmp
          sed -i '/^\s*$/d' ${file}.tmp
          awk '{print "||" $0}' ${file}.tmp | awk '{print $0 "^"}' > ${file}.list
          sed -i '1i\# https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/'${file} ${file}.list
          sed -i '1{x;p;x;}' ${file}.list
          done
          cat *.list > rules
          sed -i '1i\release version: '${{ env.RELEASE_NAME }} rules
          mkdir publish
          cp rules ./publish
          sed -i '/#/d' rules
          sed -i '/^\s*$/d' rules
          sed -i 's/..//' rules
          sed -i 's/.$//' rules
          cp rules ./publish/domains

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add geoip "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u geoip release
